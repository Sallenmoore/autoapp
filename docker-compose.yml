version: "3"

services:
  app:
    image: ${APP_NAME}:latest
    build:
      context: .
    working_dir: /var/app
    env_file: .env
    container_name: ${APP_NAME}
    volumes:
      - ./app:/var/app/
      - ./tests:/var/app/tests
      - ./vendor/autojs/src:/var/app/static/js/autojs
      - ./vendor/autostyle:/var/app/static/style/autostyle
    command: ["gunicorn", "app:create_app()", "-c/var/gunicorn.conf.py"]
    restart: unless-stopped
    ports:
      - "${APP_PORT}:5000"
  api:
    image: ${APP_NAME}_api:latest
    build:
      context: .
    working_dir: /var/app
    env_file: .env
    container_name: ${APP_NAME}
    volumes:
      - ./app:/var/app/
      - ./tests:/var/app/tests
    command: ["gunicorn", "app:create_app()", "-c/var/gunicorn.conf.py"]
    restart: unless-stopped
    ports:
      - "${API_PORT}:5000"
  redis:
    image: redis/redis-stack-server:latest
    container_name: ${APP_NAME}_redis
    volumes:
      - ./tables/:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
  wikidb:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: wiki
      POSTGRES_PASSWORD: ${APP_NAME}
      POSTGRES_USER: ${APP_NAME}
    logging:
      driver: "none"
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
  wiki:
    image: ghcr.io/requarks/wiki:2
    depends_on:
      - wikidb
    environment:
      DB_TYPE: postgres
      DB_HOST: wikidb
      DB_PORT: 5432
      DB_USER: ${APP_NAME}
      DB_PASS: ${APP_NAME}
      DB_NAME: wiki
    restart: unless-stopped
    ports:
      - "${WIKI_PORT}:3000"
networks:
  default:
    name: ${APP_NAME}_net
